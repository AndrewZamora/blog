{"componentChunkName":"component---src-templates-blog-post-js","path":"/dealing-with-time-in-js/","result":{"data":{"site":{"siteMetadata":{"title":"Zamora's Blog"}},"markdownRemark":{"id":"d5d6f3d6-c616-5059-a713-f6224de9e35d","excerpt":"The other day I was working with a JavaScript library that required timestamps but the data I was supplied with only contained durations of seconds (for example…","html":"<p>The other day I was working with a JavaScript library that required timestamps but the data I was supplied with only contained durations of seconds (for example <code class=\"language-text\">2225</code>). The year, month and day weren’t important for my use case but I couldn’t remove them from an object generated by the JavaScript Date constructor. To solve this issue I set the date object to an arbitrary year, month and day. Then used the Javascript Date object’s methods to manipulate <code class=\"language-text\">HH:MM:SS.fff</code> while ignoring the year, month and day. Here are a few ways to accomplish this and get the time back in readable format.</p>\n<h3>Setting Time to Zero</h3>\n<p>The first option is to use the <code class=\"language-text\">new Date()</code> object to get the current date and resetting <code class=\"language-text\">HH:MM:SS.fff</code> to zero and then to my desired time.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> durationInSeconds <span class=\"token operator\">=</span> <span class=\"token number\">2225</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// Sun Apr 18 2021 21:43:56 GMT+0900 (Japan Standard Time)</span>\n<span class=\"token keyword\">const</span> exampleDate <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n\n<span class=\"token comment\">// Sun Apr 18 2021 00:43:56 GMT+0900 (Japan Standard Time)</span>\nexampleDate<span class=\"token punctuation\">.</span><span class=\"token function\">setHours</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// Sun Apr 18 2021 00:00:56 GMT+0900 (Japan Standard Time)</span>\nexampleDate<span class=\"token punctuation\">.</span><span class=\"token function\">setMinutes</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// Sun Apr 18 2021 00:00:00 GMT+0900 (Japan Standard Time)</span>\nexampleDate<span class=\"token punctuation\">.</span><span class=\"token function\">setSeconds</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// Sun Apr 18 2021 00:00:00 GMT+0900 (Japan Standard Time)</span>\nexampleDate<span class=\"token punctuation\">.</span><span class=\"token function\">setMilliseconds</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// Sun Apr 18 2021 00:37:05 GMT+0900 (Japan Standard Time)</span>\nexampleDate<span class=\"token punctuation\">.</span><span class=\"token function\">setSeconds</span><span class=\"token punctuation\">(</span>durationInSeconds<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>The Date Object’s <code class=\"language-text\">setHours</code> method can also set the time to zero in one line by passing it more parameters.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// Wed May 05 2021 22:39:26 GMT+0900 (Japan Standard Time)</span>\n<span class=\"token keyword\">const</span> exampleDate2 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// Wed May 05 2021 00:00:00 GMT+0900 (Japan Standard Time)</span>\nexampleDate2<span class=\"token punctuation\">.</span><span class=\"token function\">setHours</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p> Also, if you instead want to set the current year/month/day and set the HH:MM:SS.fff to zero.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// Sun Apr 18 2021 00:00:00 GMT+0900 (Japan Standard Time)</span>\n<span class=\"token keyword\">const</span> exampleDate3 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getFullYear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getMonth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getDate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// Sun Apr 18 2021 00:37:05 GMT+0900 (Japan Standard Time)</span>\nexampleDate3<span class=\"token punctuation\">.</span><span class=\"token function\">setSeconds</span><span class=\"token punctuation\">(</span>durationInSeconds<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>In addition to the options above. We can pass <code class=\"language-text\">null</code> as a parameter to the <code class=\"language-text\">new Date()</code> constructor to reset <code class=\"language-text\">HH:MM:SS.fff</code> to zero (well sort of).</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> dateWithNull <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>dateWillNull<span class=\"token punctuation\">)</span>\n<span class=\"token comment\">// Thu Jan 01 1970 09:00:00 GMT+0900 (Japan Standard Time)</span></code></pre></div>\n<p>Jan 1st 1970(UTC) is the starting point from which the Date object keeps track of time. The examples up until now are based on local time. This matters because if we call the <code class=\"language-text\">getHours()</code> getter method on the past examples we will get <code class=\"language-text\">0</code> but call that on a Date object with <code class=\"language-text\">null</code> as a parameter we will get <code class=\"language-text\">0</code> + the GMT difference(in my case <code class=\"language-text\">9</code>). To get around this we can call the UTC equivalent getter method <code class=\"language-text\">getUTCHours()</code> which will return <code class=\"language-text\">0</code>. It’s ok to use local or UTC times since we are using the Date object to keep track of small durations of time and not a specific day or year. We just have to keep in mind which getter and setter methods to use.</p>\n<h3>Retrieve and Format the Time</h3>\n<p>Now that we have a few ways to handle time in a Date object, we can use the code below to retrieve and display that time in a desired format.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// Using Local Time:</span>\n<span class=\"token keyword\">const</span> desiredTimeInSecs <span class=\"token operator\">=</span> <span class=\"token number\">3600</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> dateLocal <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getFullYear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getMonth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getDate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ndateLocal<span class=\"token punctuation\">.</span><span class=\"token function\">setSeconds</span><span class=\"token punctuation\">(</span>desiredTimeInSecs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>hour<span class=\"token punctuation\">,</span> min<span class=\"token punctuation\">,</span> sec<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> d<span class=\"token punctuation\">.</span><span class=\"token function\">toLocaleTimeString</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"en-US\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token regex\">/:| /</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> desiredTimeFormat <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>hour<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">:</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>min<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">:</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>sec<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>(*<em>Keep in mind</em> that when using the <code class=\"language-text\">toLocaleTimeString</code> method without passing any parameters. It will default to the user’s local environment. This is important because the time string that is returned can change depending on where the user is located. For example, if a date object was created at <code class=\"language-text\">11:58:23</code> passing <code class=\"language-text\">&quot;en-US&quot;</code> to <code class=\"language-text\">toLocaleTimeString</code> will return <code class=\"language-text\">&quot;11:58:23 PM&quot;</code> while <code class=\"language-text\">&quot;en-GB&quot;</code> will return <code class=\"language-text\">&quot;23:58:23&quot;</code>.)</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// Using UTC Time:</span>\n<span class=\"token keyword\">const</span> desiredTimeInSecs <span class=\"token operator\">=</span> <span class=\"token number\">3600</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> dateUTC <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ndateUTC<span class=\"token punctuation\">.</span><span class=\"token function\">setUTCSeconds</span><span class=\"token punctuation\">(</span>desiredTimeInSecs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>dayOfTheWeek<span class=\"token punctuation\">,</span> date<span class=\"token punctuation\">,</span> month<span class=\"token punctuation\">,</span> year<span class=\"token punctuation\">,</span> hour<span class=\"token punctuation\">,</span> min<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> dateUTC<span class=\"token punctuation\">.</span><span class=\"token function\">toUTCString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token regex\">/:| /</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> desiredTimeFormat <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>hour<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">:</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>min<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">:</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>sec<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3>Conclusion</h3>\n<p>You get both the date and time when you use JavaScript’s Date object. You can’t separate the two from each other. But you can set one or the other to an arbitrary value and use the one you need. There are several ways to initialize the Date object and set the time to zero. Just make sure to use the proper setter and getter methods depending on whether you want to use UTC or local time. For more info check <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date\">MDN’s</a> documentation on JavaScript’s Date constructor and object.</p>","frontmatter":{"title":"Dealing with HH:MM:SS.fff in JavaScript","date":"April 18, 2021","description":"Handle time in JS when the day and year are not important."}}},"pageContext":{"slug":"/dealing-with-time-in-js/","previous":null,"next":{"fields":{"slug":"/handle-yyyy-mm-dd-in-js/"},"frontmatter":{"title":"Handle YYYY-MM-DD in JavaScript"}}}}}